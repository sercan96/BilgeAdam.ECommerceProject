1 => Entities katmanına Readme'deki kütüphaneler indirilir...Sonra yapılar tasarlanır...

2 => Configurations katmanına EFCore Sql Server kütüphanesi indirilir...Configurations classları tanımlanır...

3 => DAL Katmanına gecilir...Conf katmanından referans alınır(Sadece CONF katmanından referans alınması yeterli olacaktır cünkü CONF'in icerisindeki referanslar da zincirleme gelecektir)..EF Core Tools ve Proxies kütüphaneleri indirilmek zorundadır...Ondan sonra MyContext yapımızı tasarlarken Extensions klasorunde static class'larımız düz static metotlarımızı olusturuyoruz(Identity kütüphanesine bagımlılıgımızdan dolayı extension metot yaratmak istemedik)..Bunun icin Bogus kütüphanesini de bu katmana indirdik...Extension sınıflarımızdaki statik metotları Context sınıfındaki OnMOdelCreating'de kullandık...Sonra olusturdugumuz Repositories klasorunu ve icerigini bir süre askıya alarak BLL tarafına gectik ki DbContext ve Identity Servislerimiz inject edilsin ki veritabanımızın ayaga kalktıgını rahatca gözlemleyelim

4 => BLL katmanına gectigimizde öncelikle DAL katmanından referans aldık...Context servisimizi ve Identity servisimizi tanımlamak adına ServiceInjections isimli klasoru actık ve burada Extension metotlar yaratarak servislerimizin Matematik'ini bu classlara yazdık...Aynı zamanda Identity Service'imizdeki AddIdentity metodunu kullanabilmek icin FluentValidation.AspNetCore kütüphanesine de indirdik... Sonra UI katmanına gecerek BLL'den referans aldık ve program.cs'de olusturdugumuz servisleri inject ettik... Aynı zamanda UI'a (startup olarak ayarlanan projemize) Microsoft.EntityFrameworkCore.Design kütüphanesini indirdik cünkü Identity'e EF'den bagımsız bir katmanda inject ettik...

5 => DAL Katmanına dönerek Repositories klasoründe Abstract ve Conrete repository'lerimizi yazmaya basladık... Sonra BLL'deki ServiceInjections'a bu Repository için IOC tanımlaması yapıyoruz...

6 => BLL tarafında Manager Servislerimizi yazarak sonra onların IOC tanımlamalarını yapıyoruz...

7=> Common katmanında Mail göndermek i.in kullanacağımız class oluşturulur. Commonda lütfen metotlar ilgili bilgileri tekrar edin ve iyi çalışın... MailService class'ı static bir şekilde burada oluşturulur...

8=> MVCUI katmanına geçilir... ManagerService ve RepService IOC matematiği middleware'e BLL alınarak yazılır... Model klasörü içerisine de SessionService klasörü açılarak onun içerisine SessionExtension class'ı açılır... Newtonsoft Json kütüphaneisini de indirmeyi unutmayın... Sonra Cart sınıfı tasarlanır...

